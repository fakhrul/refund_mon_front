# build stage
# FROM --platform=linux/arm/v7 node:lts-alpine as build-stage
#FROM arm32v7/node:17-alpine as build-stage
FROM arm32v7/node:16.13.1 as build-stage
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .
RUN npm run build

# production stage
# FROM arm32v7/nginx:stable-alpine as production-stage
# FROM nginx:stable-alpine as production-stage
# FROM arm32v7/nginx:latest as production-stage
# COPY --from=build-stage /app/dist /usr/share/nginx/html
# EXPOSE 80
# CMD ["nginx", "-g", "daemon off;"]

# FROM arm32v7/node:lts-alpine
# RUN mkdir /home/node/app/ && chown -R node:node /home/node/app
# WORKDIR /home/node/app
# COPY --chown=node:node package*.json ./
# RUN npm install --only=prod && npm cache clean --force --loglevel=error
# # COPY . .
# RUN npm run build
